HTML
MDN사이트로 공부하길 추천함 -> html element reference에서 공부(현재 이용되는 문법)

태그(TAG)들은 박스가 되는BOX 것과  아이템 ITEM 이 되는 걸로 2개로 나뉨 
BOX : header , footer , nav , aside , main , section , acticle , div span , form 
div: block속성
span : inline속성
ol: 순서대로 , 거꾸로 , type을 정할수 있음
ul: 앞에 점표시가 있음
Item :  a  ,button input ,label , img , video , audio , map , canvas , table
input:  inline 속성
-----------------------------
selectors
universal : * 전체(전역에 적용)
type : tag
id : #id
class : .class
state : 
attribute: []
------------------------------
float : text와 이미지를 위치를 잡는 방법
flex-box : display, flex-direction , flex - wrap , flex- flow , justify- content , align- items ,align-content.

들어가는 item: order , flex-grow , flex- shrink , flex , alin-self
flex box는 중심축과 반대축이 존재함

높이 : height(절대값 높이) , vh(보이는 뷰의 높이) 
flex- direction : 정렬의 기준 (row: 가로 , colum: 세로)
flex- wrap : nowrap = 다음줄로 넘어갈꺼냐 아니냐 


justify-content: 아이템들을 어떻게 넣어줄지 정하는것
space-around(박스 주변에 공간 할당) evenly(똑같은 간격을 넣어줌) , space-between(끝에 배치하고 중간을 띄어서 넣어줌)
align-items = baseline : 균등하게 해줘,
align-content

flex-grow : 자신의 고유한 사이즈를 유지하려고 노력함 (늘어나면서 바꿈)
flex-shrink: (줄어들면서 바꿈)
flex-basis: 각각 속성값을 고정함
align-self: 모델 하나하나를 설정할때 사용합니다
색을 찾을수 있는 사이트 : color tool 
flexbox froggy 게임 해보기

     -- JS -- 

1번 영상
----------------------------------------------------
console ApI 는 웹에서 해주는 거다. (Dev tool) 
developer.mozilla.org 공식사이트에서 공부하자
----------------------------------------------------
2번 영상
----------------------------------------------------
/
js 파일을 바디에 넣는 이유 : head부터 읽으면 파일이 컸을때 불러와지는 속도가 느리므로, 먼저로드 시키고 fetching을 통해 구현한다. 
/
head + defer = html을 불러오는 동안 js를 다운받아놓고 실행 : 가장좋은 방식
'use strict' <= 조금더 상식적으로 사용가능
----------------------------------------------------
3번 영상
----------------------------------------------------
hoisting: 어디에 했는지 상관없이 가장위로 끌어 올려주는것을 말한다.

Mutable type : let 	     바뀔수 있는 변수
ImMutable type : const  바뀔수 없는 변수

number :  숫자 전체 js에서는 세세하게 할 필요 없음
string:	 글자로 표현하는것을 전제로함\
Symbol: 	 같은 변수가 있지만 우선순위를 정할떄 사용됨
------------------------------------------------------
4번째 영상
------------------------------------------------------
(`string literals : 1+2 =${1+2}`);  == 1+2 =3 문자를 숫자로 변환할수 있음 
Num operactors

+ = 더하기
- =  빼기
/ = 나누기
* = 곱하기
% = 나머지
** = 제곱

do while 과 while 의 차이는 
do while은  블록을 먼저 실행하고 while을 실행하고
while은 조건에 따라 실행하고 조건에 따라 멈춘다. 
  
object :
